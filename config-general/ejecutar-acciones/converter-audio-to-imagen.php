<?php
$input = json_decode(file_get_contents("php://input"), true);
require_once($_SERVER['DOCUMENT_ROOT'] . "/app-sintia/config-general/constantes.php");
include($_SERVER['DOCUMENT_ROOT'] . "/app-sintia/main-app/compartido/sintia-funciones.php");
if (!empty($_FILES["audio"])) {
    // Tu clave API de OpenAI
    $apiKey = KEY_CHATGPT;
    $archivoSubido = new Archivos;
    // Leer el archivo MP3 como datos binarios
    $explode = explode(".", $_FILES["audio"]['name']);
    $extension = end($explode);
    $nombre_archivo = "audio_prueaba." . $extension;
    move_uploaded_file($_FILES["audio"]['tmp_name'],  $nombre_archivo);
    
    // Generated by curl-to-PHP: 
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.openai.com/v1/audio/transcriptions');
    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
    curl_setopt($ch, CURLOPT_POST, 1);
    $post = array(
        'file' => new CURLFile($nombre_archivo),
        'timestamp_granularities[]' => 'segment',
        'model' => 'whisper-1',
        'response_format' => 'verbose_json',
    );
    curl_setopt($ch, CURLOPT_POSTFIELDS, $post);

    $headers = array();
    $headers[] = 'Authorization: Bearer ' . $apiKey;
    $headers[] = 'Content-Type: multipart/form-data';
    curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

    // Ejecutar la solicitud y obtener la respuesta
    $response = curl_exec($ch);
    unlink($nombre_archivo);
    // Cerrar la conexión cURL
    curl_close($ch);
    // Convertir la respuesta JSON en un array de PHP
    $result = json_decode($response, true);

    if (curl_errno($ch)) {
        echo 'Error:' . curl_error($ch);
    }
    curl_close($ch);
    // Extraer y mostrar solo la última respuesta del asistente
    if (isset($result['text'])) {
         // Crear el cuerpo de la solicitud
        $data = [
            'model' => 'dall-e-2',
            'prompt' => $result['text'],
            'n' => 1,
            'quality'=>'standard',
            'size' => '1024x1024'
        ];
        // Inicializar cURL
        $ch = curl_init();
        // Configurar opciones de cURL
        curl_setopt($ch, CURLOPT_URL, "https://api.openai.com/v1/images/generations");
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($ch, CURLOPT_POST, 1);
        curl_setopt($ch, CURLOPT_CUSTOMREQUEST, 'POST');
        curl_setopt($ch, CURLOPT_POSTFIELDS, json_encode($data));
        curl_setopt($ch, CURLOPT_HTTPHEADER, [
            'Content-Type: application/json',
            'Authorization: Bearer ' . $apiKey
        ]);
        // Ejecutar la solicitud y obtener la respuesta
        $response = curl_exec($ch);
        // Cerrar la conexión cURL
        curl_close($ch);
        // Convertir la respuesta JSON en un array de PHP
        $result = json_decode($response, true);
        // Extraer y mostrar solo la última respuesta del asistente
        if (isset($result['data'][0])) {
            echo "<p>Respuesta de OpenAI:</p>";
            echo "<img class='card-img-top course-image' style='height: 400px;width: 98%;border:3px dashed;padding:10px;border-radius:40px / 30px' src=".$result['data'][0]['url']." alt='Card image cap'>";
        } else {
            echo "<p>No se recibió una respuesta válida.</p>";
        }
    } else {
        echo "<p>No se recibió una respuesta válida.</p>";
    }
}
